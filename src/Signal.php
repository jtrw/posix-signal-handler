<?php
declare(ticks = 1);

class Signal
{
    public bool $flag = false;
    
    public function __construct()
    {
        $this->registered();
    }
    
    public function terminate()
    {
        if ($this->isTerminate()) {
            $this->finish();
        }
    }
    
    protected function isTerminate(): bool
    {
        return $this->flag;
    }
    
    private function finish(): void
    {
        echo "Завершение!";
        exit;
    }
    
    private function registered()
    {
        pcntl_signal(SIGTERM, [$this, "handle"]); //Request Termination of the process.
        pcntl_signal(SIGHUP,  [$this, "handle"]);
        pcntl_signal(SIGUSR1, [$this, "handle"]);
        pcntl_signal(SIGILL, [$this, "handle"]);
        pcntl_signal(SIGTSTP, [$this, "handle"]);//Stop (suspend) the process. This is the signal generated by the CTRL-Z control sequence.
        pcntl_signal(SIGINT, [$this, "handle"]); //Interrupt (request termination) of the process. This is the signal generated by the CTRL-C control sequence.
    }
    
    public function handle(int $sigNumber): void
    {
        switch ($sigNumber) {
            case SIGINT:
            case SIGTSTP:
            case SIGTERM:
                echo "PID:".posix_getpid();
                $this->flag = true;
                break;
            case SIGHUP:
            case SIGILL:
            case SIGUSR1:
                break;
        }
    }
    
    private function getPid(): int
    {
        return posix_getpid();
    }
}