<?php
//declare(ticks = 1);

namespace Jtrw\PosixSignal;

class SignalHandler
{
    private const SIGNALS_TERMINATED = [
        SIGINT,
        SIGTSTP,
        SIGTERM,
        SIGHUP,
        SIGILL
    ];
    
    private const USER_SIGNALS = [
        SIGUSR1,
        SIGUSR2
    ];
    
    private bool $isTerminate = false;
    
    public function __construct()
    {
        $this->registered();
    }
    
    public function terminate()
    {
        if ($this->isTerminate()) {
            $this->finish();
        }
    }
    
    protected function isTerminate(): bool
    {
        return $this->isTerminate;
    }
    
    private function finish(): void
    {
        exit(0);
    }
    
    private function registered()
    {
        pcntl_async_signals(true);
        pcntl_signal(SIGTERM, [$this, "handle"]); //Request Termination of the process.
        pcntl_signal(SIGHUP,  [$this, "handle"]);
        pcntl_signal(SIGUSR1, [$this, "handle"]);
        pcntl_signal(SIGILL, [$this, "handle"]);
        pcntl_signal(SIGTSTP, [$this, "handle"]);//Stop (suspend) the process. This is the signal generated by the CTRL-Z control sequence.
        pcntl_signal(SIGINT, [$this, "handle"]); //Interrupt (request termination) of the process. This is the signal generated by the CTRL-C control sequence.
    }
    
    public function handle(int $sigNumber): void
    {
        if (in_array($sigNumber, static::SIGNALS_TERMINATED)) {
            $this->isTerminate = true;
        }
    }
    
    private function getPid(): int
    {
        return posix_getpid();
    }
}
